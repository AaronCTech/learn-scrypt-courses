import "util.scrypt";

contract TicTacToe {

    PubKey alice;
    PubKey bob;

    @state
    State state;

    
    static const int TURNLEN = 1;
    static const int BOARDLEN = 9;
    static const bytes EMPTY = b'00';
    static const bytes ALICE = b'01';
    static const bytes BOB = b'02';

    public function move(int n, Sig sig, int amount, SigHashPreimage txPreimage) {

        require(Tx.checkPreimage(txPreimage));
        require(n >= 0 && n < BOARDLEN);

        require(Util.getElemAt(board, n) == EMPTY);

        bytes play = turn == 0 ? ALICE : BOB;
        PubKey player = turn == 0 ? this.alice : this.bob;
        require(checkSig(sig, player));
        
        //TODO: update state


        bytes outputs = b'';
        if (this.won(board, play)) {
            ...
        }
        else if (this.full(board)) {
            ...
        } else {
            bytes scriptCode_ =  this.createScript();
            bytes output = Util.buildOutput(scriptCode_, amount);
            outputs = output;
        }

        //TODO: Constraint output here
    }
    
    ...
}
